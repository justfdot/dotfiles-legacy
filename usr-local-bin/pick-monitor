#!/usr/bin/env bash

internal=(LVDS1 --mode 1366x768 --pos 0x0 --rotate normal)
external=(VGA1 --mode 1920x1080 --pos 0x0 --rotate normal)
active_monitor=$(cat "/tmp/active-monitor" 2> /dev/null)

debug () {
    echo "[$(date '+%d.%m.%Y %H:%M:%S')] $*" >> "/tmp/$(basename "$0").log"
}

run_as_user () {
    if [[ $EUID -eq 0 ]] ; then
        su - "$XUSER" -c "$*"
    else
        eval "$*"
    fi
}

if xrandr --query | grep -q "${external[0]} connected" ; then
    monitor="${external[0]}"
    internal=("${internal[0]}" --off)
    gaps=25
else
    monitor="${internal[0]}"
    external=("${external[0]}" --off)
    gaps=20
fi

[[ "$active_monitor" = "$monitor" ]] && exit 0
echo "$monitor" > /tmp/active-monitor

xrandr --output "${internal[@]}" --output "${external[@]}"

[[ -z "$XUSER" ]] && XUSER=$USER

killall -u "$XUSER" -q polybar

# polybar_and_gaps="i3-msg gaps inner all set $gaps; MONITOR=$monitor polybar bottom &"
# [[ $UID -eq 0 ]] && polybar_and_gaps="su - $XUSER -c \"$polybar_and_gaps\""
# eval "$polybar_and_gaps"
run_as_user "i3-msg gaps inner all set $gaps; MONITOR=$monitor polybar bottom &"

# if [[ $UID -eq 0 ]] ; then
#     su - "$XUSER" -c "MONITOR=$monitor polybar bottom &"
# else
#     MONITOR=$monitor polybar bottom &
# fi

pkill -USR1 -f eyeskeeper

wallpaper="/home/$XUSER/img/wallpaper"
[[ -f "$wallpaper" ]] && feh --bg-scale "$wallpaper"
